generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model ExerciseCategory {
  id Int @id @default(autoincrement())

  name      String     @unique
  exercises Exercise[]
}

model Exercise {
  id Int @id @default(autoincrement())

  category_id Int
  category    ExerciseCategory @relation(fields: [category_id], references: [id])

  intensity_unit String @default("kg")
  name           String @unique
  notes          String @default("")
  Sets           Set[]
}

model Session {
  id Int @id @default(autoincrement())

  user_id String @map("user_id")
  user    User   @relation(fields: [user_id], references: [id])

  date  DateTime @default(now())
  notes String   @default("")
  Sets  Set[]
}

model Set {
  id Int @id @default(autoincrement())

  session_id Int
  session    Session @relation(fields: [session_id], references: [id])

  exercise_id Int
  exercise    Exercise @relation(fields: [exercise_id], references: [id], onDelete: Cascade)

  reps       Int      @default(1)
  intensity  Float    @default(0.0)
  created_at DateTime @default(now())
}

model User {
  id            String        @id @default(cuid())
  username      String        @unique
  password_hash String
  sessions      Session[]
  userSessions  UserSession[]
}

model UserSession {
  id        String   @id @default(cuid()) // Session ID stored in cookie
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade delete sessions if user is deleted

  @@index([userId])
}
